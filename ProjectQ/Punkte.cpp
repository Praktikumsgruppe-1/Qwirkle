
#include <iostream>
using namespace std;

// Spielfeld mit 4 Einträgen pro Feld für Farbe und Form des Steins
  int field[181][181][4]={};
  int checkcounter;
  int lastx;
  int lasty;

//Punkteberechnung
int calc(int xCoord,int yCoord){
  int note;
  int rowcheck;
  int rowcounter=0;
  int finalcounter=0;
  rowcheck=xCoord+1;
  if(field[rowcheck][yCoord][3]==1){
    note=xCoord-1;
    while(field[note][yCoord][1]==field[xCoord][yCoord][1]){
      rowcounter=rowcounter+1;
      note=note-1;
    }
    note=xCoord+1;
    while(field[note][yCoord][1]==field[xCoord][yCoord][1]){
      rowcounter=rowcounter+1;
      note=note+1;
    }
    note=xCoord-1;
    while(field[note][yCoord][2]==field[xCoord][yCoord][2]){
      rowcounter=rowcounter+1;
      note=note-1;
    }
    note=xCoord+1;
    while(field[note][yCoord][2]==field[xCoord][yCoord][2]){
      rowcounter=rowcounter+1;
      note=note+1;
    }
    if(rowcounter>0){
      rowcounter=rowcounter+1;
      if(rowcounter==6){
        rowcounter=12;
      }
      finalcounter=finalcounter+rowcounter;
      rowcounter=0;
    }
    rowcheck=xCoord;
    do{
      note=yCoord-1;
      while(field[rowcheck][note][1]==field[rowcheck][yCoord][1]){
        rowcounter=rowcounter+1;
        note=note-1;
      }
      note=yCoord+1;
      while(field[rowcheck][note][1]==field[rowcheck][yCoord][1]){
        rowcounter=rowcounter+1;
        note=note+1;
      }
      note=yCoord-1;
      while(field[rowcheck][note][2]==field[rowcheck][yCoord][2]){
        rowcounter=rowcounter+1;
        note=note-1;
      }
      note=yCoord+1;
      while(field[rowcheck][note][2]==field[rowcheck][yCoord][2]){
        rowcounter=rowcounter+1;
        note=note+1;
      }
      if(rowcounter>0){
        rowcounter=rowcounter+1;
        if(rowcounter==6){
          rowcounter=12;
        }
        finalcounter=finalcounter+rowcounter;
        rowcounter=0;
      }
      rowcheck=rowcheck+1;
    }while(field[rowcheck][yCoord][3]==1);
  }
  rowcheck=xCoord-1;
  if(field[rowcheck][yCoord][3]==1){
    note=xCoord-1;
    while(field[note][yCoord][1]==field[xCoord][yCoord][1]){
      rowcounter=rowcounter+1;
      note=note-1;
    }
    note=xCoord+1;
    while(field[note][yCoord][1]==field[xCoord][yCoord][1]){
      rowcounter=rowcounter+1;
      note=note+1;
    }
    note=xCoord-1;
    while(field[note][yCoord][2]==field[xCoord][yCoord][2]){
      rowcounter=rowcounter+1;
      note=note-1;
    }
    note=xCoord+1;
    while(field[note][yCoord][2]==field[xCoord][yCoord][2]){
      rowcounter=rowcounter+1;
      note=note+1;
    }
    if(rowcounter>0){
      rowcounter=rowcounter+1;
      if(rowcounter==6){
        rowcounter=12;
      }
      finalcounter=finalcounter+rowcounter;
      rowcounter=0;
    }
    rowcheck=xCoord;
    do{
      note=yCoord-1;
      while(field[rowcheck][note][1]==field[rowcheck][yCoord][1]){
        rowcounter=rowcounter+1;
        note=note-1;
      }
      note=yCoord+1;
      while(field[rowcheck][note][1]==field[rowcheck][yCoord][1]){
        rowcounter=rowcounter+1;
        note=note+1;
      }
      note=yCoord-1;
      while(field[rowcheck][note][2]==field[rowcheck][yCoord][2]){
        rowcounter=rowcounter+1;
        note=note-1;
      }
      note=yCoord+1;
      while(field[rowcheck][note][2]==field[rowcheck][yCoord][2]){
        rowcounter=rowcounter+1;
        note=note+1;
      }
      if(rowcounter>0){
        rowcounter=rowcounter+1;
        if(rowcounter==6){
          rowcounter=12;
        }
        finalcounter=finalcounter+rowcounter;
        rowcounter=0;
      }
      rowcheck=rowcheck-1;
    }while(field[rowcheck][yCoord][3]==1);
  }
  rowcheck=yCoord+1;
  if(field[xCoord][rowcheck][3]==1){
  note=yCoord-1;
  while(field[xCoord][note][1]==field[xCoord][yCoord][1]){
    rowcounter=rowcounter+1;
    note=note-1;
  }
  note=yCoord+1;
  while(field[xCoord][note][1]==field[xCoord][yCoord][1]){
    rowcounter=rowcounter+1;
    note=note+1;
  }
  note=yCoord-1;
  while(field[xCoord][note][2]==field[xCoord][yCoord][2]){
    rowcounter=rowcounter+1;
    note=note-1;
  }
  note=yCoord+1;
  while(field[xCoord][note][2]==field[xCoord][yCoord][2]){
    rowcounter=rowcounter+1;
    note=note+1;
  }
  if(rowcounter>0){
    rowcounter=rowcounter+1;
    if(rowcounter==6){
      rowcounter=12;
    }
    finalcounter=finalcounter+rowcounter;
    rowcounter=0;
  }
  rowcheck=yCoord;
  do{
    note=xCoord-1;
    while(field[note][rowcheck][1]==field[xCoord][rowcheck][1]){
      rowcounter=rowcounter+1;
      note=note-1;
    }
    note=xCoord+1;
    while(field[note][rowcheck][1]==field[xCoord][rowcheck][1]){
      rowcounter=rowcounter+1;
      note=note+1;
    }
    note=xCoord-1;
    while(field[note][rowcheck][2]==field[xCoord][rowcheck][2]){
      rowcounter=rowcounter+1;
      note=note-1;
    }
    note=xCoord+1;
    while(field[note][rowcheck][2]==field[xCoord][rowcheck][2]){
      rowcounter=rowcounter+1;
      note=note+1;
    }
    if(rowcounter>0){
      rowcounter=rowcounter+1;
      if(rowcounter==6){
        rowcounter=12;
      }
      finalcounter=finalcounter+rowcounter;
      rowcounter=0;
    }
    rowcheck=rowcheck+1;
  }while(field[xCoord][rowcheck][3]==1);
}
  rowcheck=yCoord-1;
  if(field[xCoord][rowcheck][3]==1){
  note=yCoord-1;
  while(field[xCoord][note][1]==field[xCoord][yCoord][1]){
    rowcounter=rowcounter+1;
    note=note-1;
  }
  note=yCoord+1;
  while(field[xCoord][note][1]==field[xCoord][yCoord][1]){
    rowcounter=rowcounter+1;
    note=note+1;
  }
  note=yCoord-1;
  while(field[xCoord][note][2]==field[xCoord][yCoord][2]){
    rowcounter=rowcounter+1;
    note=note-1;
  }
  note=yCoord+1;
  while(field[xCoord][note][2]==field[xCoord][yCoord][2]){
    rowcounter=rowcounter+1;
    note=note+1;
  }
  if(rowcounter>0){
    rowcounter=rowcounter+1;
    if(rowcounter==6){
      rowcounter=12;
    }
    finalcounter=finalcounter+rowcounter;
    rowcounter=0;
  }
  rowcheck=yCoord;
  do{
    note=xCoord-1;
    while(field[note][rowcheck][1]==field[xCoord][rowcheck][1]){
      rowcounter=rowcounter+1;
      note=note-1;
    }
    note=xCoord+1;
    while(field[note][rowcheck][1]==field[xCoord][rowcheck][1]){
      rowcounter=rowcounter+1;
      note=note+1;
    }
    note=xCoord-1;
    while(field[note][rowcheck][2]==field[xCoord][rowcheck][2]){
      rowcounter=rowcounter+1;
      note=note-1;
    }
    note=xCoord+1;
    while(field[note][rowcheck][2]==field[xCoord][rowcheck][2]){
      rowcounter=rowcounter+1;
      note=note+1;
    }
    if(rowcounter>0){
      rowcounter=rowcounter+1;
      if(rowcounter==6){
        rowcounter=12;
      }
      finalcounter=finalcounter+rowcounter;
      rowcounter=0;
    }
    rowcheck=rowcheck-1;
  }while(field[xCoord][rowcheck][3]==1);
}
  if(finalcounter==0){
    note=yCoord-1;
    while(field[xCoord][note][1]==field[xCoord][yCoord][1]){
      rowcounter=rowcounter+1;
      note=note-1;
    }
    note=yCoord+1;
    while(field[xCoord][note][1]==field[xCoord][yCoord][1]){
      rowcounter=rowcounter+1;
      note=note+1;
    }
    note=yCoord-1;
    while(field[xCoord][note][2]==field[xCoord][yCoord][2]){
      rowcounter=rowcounter+1;
      note=note-1;
    }
    note=yCoord+1;
    while(field[xCoord][note][2]==field[xCoord][yCoord][2]){
      rowcounter=rowcounter+1;
      note=note+1;
    }
    if(rowcounter>0){
      rowcounter=rowcounter+1;
      if(rowcounter==6){
        rowcounter=12;
      }
      finalcounter=finalcounter+rowcounter;
      rowcounter=0;
    }
    note=xCoord-1;
    while(field[note][yCoord][1]==field[xCoord][yCoord][1]){
      rowcounter=rowcounter+1;
      note=note-1;
    }
    note=xCoord+1;
    while(field[note][yCoord][1]==field[xCoord][yCoord][1]){
      rowcounter=rowcounter+1;
      note=note+1;
    }
    note=xCoord-1;
    while(field[note][yCoord][2]==field[xCoord][yCoord][2]){
      rowcounter=rowcounter+1;
      note=note-1;
    }
    note=xCoord+1;
    while(field[note][yCoord][2]==field[xCoord][yCoord][2]){
      rowcounter=rowcounter+1;
      note=note+1;
    }
    if(rowcounter>0){
      rowcounter=rowcounter+1;
      if(rowcounter==6){
        rowcounter=12;
      }
      finalcounter=finalcounter+rowcounter;
      rowcounter=0;
    }
  }
  checkcounter=0;
  lastx=0;
  lasty=0;
  return finalcounter;
}

/*
int main() {
  field[22][52][1]=2;
  field[22][52][2]=6;
  field[23][52][1]=2;
  field[23][52][2]=5;
  field[24][52][1]=2;
  field[24][52][2]=2;
  field[25][52][1]=2;
  field[25][52][2]=3;
  field[26][52][1]=2;
  field[26][52][2]=7;
  field[27][52][1]=2;
  field[27][52][2]=4;
  field[23][51][1]=3;
  field[23][51][2]=5;
  field[24][53][1]=5;
  field[24][53][2]=2;
  field[24][54][1]=6;
  field[24][54][2]=2;
  field[26][53][1]=6;
  field[26][53][2]=7;
  //field[23][51][3]=1;
  //field[24][52][3]=1;
  //field[24][53][3]=1;
  //field[23][54][3]=1;
  //field[27][52][3]=1;
  cout << calc(25,52) << endl;
  cout << field[24][53][2];
}
*/
